<diagram program="umletino" version="14.3.0"><zoom_level>10</zoom_level><help_text>// Uncomment the following line to change the fontsize and font:
fontsize=18
fontfamily=SansSerif //possible: SansSerif,Serif,Monospaced


//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Ctrl to select multiple elements
// Use Ctrl+mouse to select via lasso
//
// Use +/- or Ctrl+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Ctrl+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text will be stored with each diagram;  use it for notes.</help_text>
  <zoom_level>5</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>810</x>
      <y>40</y>
      <w>85</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>/RPGraph::Graph/
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>825</x>
      <y>50</y>
      <w>65</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
&lt;&lt;instanceOf&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>800</x>
      <y>100</y>
      <w>160</w>
      <h>135</h>
    </coordinates>
    <panel_attributes>RPGraph::UGraph
{adjacency_list}
--
-adjacency_list
+UGraph(Template&lt;T&gt; source): 
??????Determines adapter used?
+allow_duplicates
+vector&lt;uint32_t&gt; degrees
^--- Is currently an unordered_map...
--
-add_edge(nid_t, nid_t)
+has_edge(nid_t, nid_t)
--
Responsibilities</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1220</x>
      <y>215</y>
      <w>190</w>
      <h>300</h>
    </coordinates>
    <panel_attributes>RPGraph::DatasetAdapter
{Map node ids for other DSs}
--
DatasetAdapter(filePath??: String)
--
-translate(nid_t): contiguous_nid_t
-translate(contiguous_nid_t): nid_t
+get_dataset_iterator(): 
==&gt; Iterator(nid_t --&gt; contiguous_nid_t)
       ^---- Iterator could be a class that uses yield.
       
+get_write_stream(): ?Maybe Object?
                     Hooks up a mapping function to
                     a writing stream.
--
Responsibilities:
-- Provide public interface with external 
-- datasets that may not be contiguous.  
-- Having contiguous ids internal to all 
-- other data structures (and the program
-- as a whole) allows for much more efficient 
-- and maintainable implementation.

-- Input: File is specified in constructor.  
-- Provides mapped iterator/stream over file.

-- Output: Accept contiguous node id streams, 
-- and write as original node id streams.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>625</x>
      <y>310</y>
      <w>210</w>
      <h>165</h>
    </coordinates>
    <panel_attributes>RPGraph::GraphViewer
{Public graph_viewer interface}
--
+GraphViewer(filePath: String)
--
-vector&lt;UGraph&gt; graphs
-CommunityAlgo comm_algo
-LayoutAlgorithm layout_algo
--
+set_layout_algo(LAYOUT_ENUM)????
+set_comm_algo(CommunityAlgo??ENUM??)
+set_display_method(IOUtility??ENUM??) 
^------ Example: LayoutPNGWriterUtility
+Compress??(): result_struct?? CALLS COMM ALGO
+Show(): Side effect ==&gt; IO is displayed.
--
Responsibilities
-- Aggregate and initialize all components</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>960</x>
      <y>400</y>
      <w>130</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>/RPGraph::CommunityAlgo/
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>930</x>
      <y>470</y>
      <w>210</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>RPGraph::DisjointPartitionAlgo
{Compute a disjoiint partition of a network}
--
+compute_partition(UGraph): DisjointResults
+write_partition(DatasetAdapter, filePath: String)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>995</x>
      <y>415</y>
      <w>65</w>
      <h>65</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
&lt;&lt;instanceOf&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;110.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>950</x>
      <y>555</y>
      <w>225</w>
      <h>95</h>
    </coordinates>
    <panel_attributes>CommunityAlgos?::SCoDA
{Execute SCoDA algorithm}
--
SCoDA(????): result_struct??
--
-get_mode_degree(UGraph): int; (round up or down on tie? up)
--
Responsibilities
-- Create disjoint partition with SCoDA algorithm.</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>995</x>
      <y>515</y>
      <w>65</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
&lt;&lt;instanceOf&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>830</x>
      <y>415</y>
      <w>110</w>
      <h>75</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
1</panel_attributes>
    <additional_attributes>200.0;130.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>1325</x>
      <y>0</y>
      <w>355</w>
      <h>640</h>
    </coordinates>
    <panel_attributes>Non-contiguous Node Ids

ONLY PLACE WHERE:
original dataset node ids live.
--
bg=orange</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>220</x>
      <y>15</y>
      <w>430</w>
      <h>225</h>
    </coordinates>
    <panel_attributes>IMPORTANT: Either we want to isolate the original node_ids to the dataset, and use contiguous node_ids everywhere internally,
OR we want to use the original node_ids everywhere EXCEPT for when absolutely necessary for data structures.

Contiguous:
  Pros:
    Easy to use with GPU code
    Efficient implemenations possible everywhere
  Cons:
    Strict adapter policy required.  May require holding an object that internally contains a map to allow for IO with partitions later on.

Original:
  Pros: 
    Internal representations that are publicly visible will match external representations!!
  Cons:
    Hard to work with GPU code.  Possible to make bad errors.
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1485</x>
      <y>460</y>
      <w>155</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>_partition_output_file: fstream_
--
Non-contiguous node_id partitions</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1495</x>
      <y>225</y>
      <w>105</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>_edgelist_file: fstream_
--
Non-contiguous node_id pairs</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1405</x>
      <y>225</y>
      <w>100</w>
      <h>25</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
&lt;&lt;READS&gt;&gt;</panel_attributes>
    <additional_attributes>180.0;30.0;10.0;30.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1405</x>
      <y>460</y>
      <w>90</w>
      <h>25</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
&lt;&lt;WRITES&gt;&gt;</panel_attributes>
    <additional_attributes>160.0;30.0;10.0;30.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>830</x>
      <y>340</y>
      <w>400</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
1</panel_attributes>
    <additional_attributes>780.0;40.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1135</x>
      <y>485</y>
      <w>95</w>
      <h>25</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
**&lt;&lt;USES TO WRITE&gt;&gt;**</panel_attributes>
    <additional_attributes>170.0;30.0;10.0;30.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1065</x>
      <y>100</y>
      <w>160</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>RPGraph::CommUGraph
{adjacency_list}
--
-adjacency_list
+CommUGraph(Template&lt;T&gt; source): 
???????Determines adapter used?
--
--
Responsibilities</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>955</x>
      <y>115</y>
      <w>120</w>
      <h>25</h>
    </coordinates>
    <panel_attributes>lt=&lt;.
&lt;&lt;instanceOf&gt;&gt;</panel_attributes>
    <additional_attributes>10.0;30.0;220.0;30.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1035</x>
      <y>5</y>
      <w>280</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>TODO: Add GraphLayout, and all other classes as necessary.
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>850</x>
      <y>230</y>
      <w>380</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
**&lt;&lt;USES TO READ&gt;&gt;**</panel_attributes>
    <additional_attributes>740.0;180.0;10.0;180.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>685</x>
      <y>175</y>
      <w>125</w>
      <h>145</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
1+

(Includes CommUGraphs)</panel_attributes>
    <additional_attributes>230.0;30.0;10.0;30.0;10.0;270.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1270</x>
      <y>130</y>
      <w>120</w>
      <h>85</h>
    </coordinates>
    <panel_attributes>Should we extended an 
fstream class??  Can we?
Overload operator&gt;&gt;???
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>380</x>
      <y>340</y>
      <w>120</w>
      <h>25</h>
    </coordinates>
    <panel_attributes>graph_viewer_exec
fontsize=22</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>495</x>
      <y>335</y>
      <w>140</w>
      <h>25</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
*ENTRY POINT*</panel_attributes>
    <additional_attributes>260.0;30.0;10.0;30.0</additional_attributes>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>740</x>
      <y>730</y>
      <w>670</w>
      <h>410</h>
    </coordinates>
    <panel_attributes>TEMP SIMPLIFIED: Internals of GraphViewer

--
bg=orange</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1030</x>
      <y>795</y>
      <w>50</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>DerivedGraph
--
UG
Layout</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1100</x>
      <y>845</y>
      <w>100</w>
      <h>55</h>
    </coordinates>
    <panel_attributes>DerivedGraphHyperEdge
--
DG source;
nid_to_comm_map;
SCoDA_Results;
DG comm_G;
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1030</x>
      <y>905</y>
      <w>50</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>DerivedGraph
--
UG
Layout</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>340</x>
      <y>145</y>
      <w>95</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;170.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1075</x>
      <y>815</y>
      <w>35</w>
      <h>55</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;50.0;90.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1075</x>
      <y>880</y>
      <w>35</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;80.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>1195</x>
      <y>915</y>
      <w>60</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>expand()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>925</x>
      <y>790</y>
      <w>115</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
*Uses BOTH*</panel_attributes>
    <additional_attributes>210.0;40.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>840</x>
      <y>775</y>
      <w>95</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>layout() 
### With LayoutAlgorithm ###</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>930</x>
      <y>820</y>
      <w>110</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
*Uses LAYOUT*</panel_attributes>
    <additional_attributes>200.0;20.0;10.0;40.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>875</x>
      <y>830</y>
      <w>60</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>show()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>920</x>
      <y>915</y>
      <w>120</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
*TAKES AS INPUT*</panel_attributes>
    <additional_attributes>220.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>920</x>
      <y>955</y>
      <w>200</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
*PRODUCES AS OUTPUT*</panel_attributes>
    <additional_attributes>380.0;50.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1110</x>
      <y>960</y>
      <w>100</w>
      <h>55</h>
    </coordinates>
    <panel_attributes>DerivedGraphHyperEdge
--
DG source;
nid_to_comm_map;
SCoDA_Results;
DG comm_G;
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1075</x>
      <y>995</y>
      <w>45</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;70.0;70.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1075</x>
      <y>935</y>
      <w>45</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;70.0;70.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1030</x>
      <y>1015</y>
      <w>50</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>DerivedGraph
--
UG
Layout</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>920</x>
      <y>955</y>
      <w>200</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
*PRODUCES AS OUTPUT*
*VIA DerivedGraphHyperEdge*</panel_attributes>
    <additional_attributes>250.0;120.0;10.0;70.0;380.0;90.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLUseCase</id>
    <coordinates>
      <x>870</x>
      <y>945</y>
      <w>60</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>compress()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1175</x>
      <y>925</y>
      <w>80</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
*CONSUMES!!*</panel_attributes>
    <additional_attributes>10.0;70.0;50.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1050</x>
      <y>915</y>
      <w>160</w>
      <h>55</h>
    </coordinates>
    <panel_attributes>lt=&lt;..
*MODIFIES LAYOUT*</panel_attributes>
    <additional_attributes>10.0;30.0;100.0;10.0;130.0;90.0;300.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1075</x>
      <y>930</y>
      <w>280</w>
      <h>145</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
*CONSUMES!!*
*VIA DerivedGraphHyperEdge*</panel_attributes>
    <additional_attributes>10.0;220.0;310.0;270.0;270.0;130.0;320.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1260</x>
      <y>915</y>
      <w>130</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>When consumed, 
Do we still store it somewhere?
Or do we lose the SCoDA_Results as well?
Or do we store the SCoDA_Results 
(since they are small)
and discard everything else?

Answer: Add some identifying information to
the report/results ==&gt; name change, call it a 
report.  And then store it in a larger report
container.

bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>760</x>
      <y>910</y>
      <w>100</w>
      <h>125</h>
    </coordinates>
    <panel_attributes>compress():

1. Get UG, original.
2. Create extra stuff for SCoDA
3. Call SCoDA
4. Store results from SCoDA?
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>0</x>
      <y>625</y>
      <w>595</w>
      <h>415</h>
    </coordinates>
    <panel_attributes>Container for DerivedGraph/DerivedGraphHyperEdge Linked list.
--
bg=orange</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>590</x>
      <y>720</y>
      <w>480</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;-
*NEW DATASTUCTURE*</panel_attributes>
    <additional_attributes>10.0;10.0;90.0;240.0;940.0;280.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>110</x>
      <y>765</y>
      <w>50</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>DerivedGraph
--
UG
Layout</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>185</x>
      <y>800</y>
      <w>100</w>
      <h>55</h>
    </coordinates>
    <panel_attributes>DerivedGraphHyperEdge
--
DG source;
nid_to_comm_map;
SCoDA_Results;
DG comm_G;
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>635</y>
      <w>265</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Container&gt;&gt;
Package::CompressionGraphList
{Some Properties}
--
-id: Long
_-ClassAttribute: Long_
--
#push(DerivedGraphHyperEdge): 
^----- NOTE: Puts a new graph on as well.
#pop(): DerivedGraphHyperEdge
  ^-------NOTE: Removes a Graph as well.
#get_original(): DerivedGraph
#peek(): DerivedGraph
#_get(int idx): DG or DGHE?
#

--
Responsibilities
-- Resp1
*-- Resp2*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>85</x>
      <y>410</y>
      <w>300</w>
      <h>145</h>
    </coordinates>
    <panel_attributes>SCoDA: 
Printing a partition.
Printing the partition of the original comm graph simply means:

1. Mapping through the original nid_comm map
2. Mapping AGAIN through the DatasetAdapter
3. Printing the result.

Printing any recursive partition means:

1. Mapping through the nth nid_comm map
2. Mapping through each nid_comm map up to the original
3. Mapping AGAIN through the DatasetAdapter
4. Printing the result.
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>110</x>
      <y>845</y>
      <w>50</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>DerivedGraph
--
UG
Layout</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>150</x>
      <y>795</y>
      <w>45</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;70.0;40.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>150</x>
      <y>835</y>
      <w>45</w>
      <h>35</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;50.0;70.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>330</x>
      <y>765</y>
      <w>105</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>List of results from SCoDA
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>355</x>
      <y>790</y>
      <w>50</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>SCoDA_Report
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>355</x>
      <y>810</y>
      <w>50</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>SCoDA_Report
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>355</x>
      <y>830</y>
      <w>50</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>SCoDA_Report
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>355</x>
      <y>850</y>
      <w>50</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>SCoDA_Report
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>275</x>
      <y>795</y>
      <w>90</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>160.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Text</id>
    <coordinates>
      <x>260</x>
      <y>865</y>
      <w>20</w>
      <h>15</h>
    </coordinates>
    <panel_attributes>Etc.
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1675</x>
      <y>730</y>
      <w>50</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>DerivedGraph
--
UG
Layout</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1775</x>
      <y>830</y>
      <w>155</w>
      <h>55</h>
    </coordinates>
    <panel_attributes>DerivedGraphHyperEdge
--
DG source;
nid_to_comm_map;
====????SCoDA_Results;??? move out of here?
DG comm_G;
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1710</x>
      <y>765</y>
      <w>60</w>
      <h>185</h>
    </coordinates>
    <panel_attributes>lt=&lt;-
compress()</panel_attributes>
    <additional_attributes>10.0;350.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1710</x>
      <y>830</y>
      <w>75</w>
      <h>25</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.
produces</panel_attributes>
    <additional_attributes>130.0;30.0;10.0;30.0</additional_attributes>
  </element>
</diagram>
